#include <unistd.h>
#include <sys/types.h>

#define FALSE 0
#define TRUE 1

#define EXIT_SUCCESS 0
#define EXIT_ERRO_ARGUMENTO_QUANTIDADE 1 //QUANTIDADE DE ARGUMENTOS ERRADA
#define EXIT_ERRO_ARGUMENTO_DESCONHECIDO 2 //ARGUMENTO DESCONHECIDO
#define EXIT_ERRO_ARGUMENTO_D_E_NAO_EXISTE 3 //ARGUMENTOS 'D' E 'E' NÃO EXISTEM
#define EXIT_ERRO_ARGUMENTO_D_NAO_EXISTE 4 //ARGUMENTO 'D' NÃO EXISTE
#define EXIT_ERRO_ARGUMENTO_E_NAO_EXISTE 5 //ARGUMENTO 'E' NÃO EXISTE
#define EXIT_ERRO_ARGUMENTO_INESPERADO 6 //ARGUMENTO ACONTECIMENTO INESPERADO
#define EXIT_ERRO_ARGUMENTO_D_E_VALOR 7 //ARGUMENTOS 'D' E 'E' COM VALORES IMPOSSIVEIS
#define EXIT_ERRO_ARGUMENTO_D_VALOR 8 //ARGUMENTO 'D' COM VALOR IMPOSSIVEL
#define EXIT_ERRO_ARGUMENTO_E_VALOR 9 //ARGUMENTO 'E' COM VALOR IMPOSSIVEL
#define EXIT_ERRO_SINAL_SIGINT_CONFIGURACAO 10 //ERRO NA CONFIGURAÇÃO DO SINAL SIGINT
#define EXIT_ERRO_SINAL_SIGUSR1_CONFIGURACAO 11 //ERRO NA CONFIGURAÇÃO DO SINAL SIGUSR1
#define EXIT_ERRO_CONEXAO_COM_ARBITRO 12 //ERRO NA CONEXÃO COM O ÁRBITRO
#define EXIT_ERRO_FIFO_ARBITRO_CRIACAO 13 //ERRO NA CRIAÇÃO DO FIFO DO ARBITRO
#define EXIT_ERRO_FIFO_ARBITRO_ABRIR 14 //ERRO NA ABERTURA DO FIFO DO ARBITRO
#define EXIT_ERRO_FIFO_CLIENTE_CRIACAO 15 //ERRO NA CRIAÇÂO DO FIFO DO CLIENTE
#define EXIT_ERRO_FIFO_CLIENTE_ABRIR 16 //ERRO NA ABERTURA DO FIFO DO CLIENTE
#define EXIT_ERRO_SINAL_SIGUSR2_CONFIGURACAO 17 //ERRO NA CONFIGURAÇÃO DO SINAL SIGUSR2

//NOME DO FIFO DO ARBITRO
#define FIFO_ARBITRO "/tmp/fifo_arbitro"
//NOME DO FIFO DO CLIENTE
#define FIFO_CLIENTE "/tmp/fifo_cliente_%d" //NOME DO FIFO DE CADA CLIENTE EM QUE O %D IRÁ SER SUBSTITUIDO PELO PID

#define TAM_USERNAME 20 //TAMANHO DO NOME DO JOGADOR
#define TAM_NOME_JOGO 20 //TAMANHO DO NOME DO JOGO
#define TAM_MENSAGEM_JOGADOR 100 //TAMANHO DA MENSAGEM DO JOGADOR
#define TAM_MENSAGEM_JOGO 1000 //TAMANHO DA MENSAGEM DO JOGO
#define TAM_MENSAGEM_ARBITRO 1000 //TAMANHO DA MENSAGEM DO ARBITRO

typedef struct{
    pid_t pid_cliente; //PROCESS ID DO CLIENTE
    int validID; //TRUE(1)=ID ESTÁ VÁLIDO | FALSE(0)=ID NÃO É VÁLIDO
    char nomeID[TAM_USERNAME]; //NOME DO JOGADOR (UNICO)
    char msg[TAM_MENSAGEM_JOGADOR]; //MENSAGEM DO JOGADOR
}JOGADOR;

typedef struct{
    pid_t pid_jogo; // PROCESS ID DO JOGO
    char nomeJogo[TAM_NOME_JOGO];
    char msg[TAM_MENSAGEM_JOGO]; //MENSAGEM DO JOGO
}JOGO;

typedef struct{
    char msg[TAM_MENSAGEM_ARBITRO];
}ARBITRO;

typedef struct{
    pid_t pid_cliente;
    pid_t pid_jogo;
    char nomeJogador[TAM_USERNAME];
    char nomeJogo[TAM_NOME_JOGO];
    int pontuacao;
}CAMPEONATO;